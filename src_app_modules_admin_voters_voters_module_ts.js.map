{"version":3,"file":"src_app_modules_admin_voters_voters_module_ts.js","mappings":"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","sources":["./src/app/modules/admin/voters/add/add.component.ts","./src/app/modules/admin/voters/add/add.component.html","./src/app/modules/admin/voters/list/list.component.ts","./src/app/modules/admin/voters/list/list.component.html","./src/app/modules/admin/voters/service/voter.service.ts","./src/app/modules/admin/voters/voters.module.ts"],"sourcesContent":["import { SwalService } from './../../../../shared/services/swal.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VoterService } from './../service/voter.service';\nimport { CommanService, party, assignedPerson, ageCheck } from './../../../../shared/services/comman.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, NgForm, UntypedFormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  @ViewChild('voterNgForm') voterNgForm: NgForm;\n  voterForm: UntypedFormGroup;\n  public parties: party[] = [];\n  public assignee: assignedPerson[] = [];\n  public readonly: boolean = false;\n\n  genders: Array<{ id: number, name: string }> = [];\n  votingFor: Array<{ id: number, name: string, isDeleted: boolean }> = [];\n\n\n  constructor(public _formBuilder: FormBuilder,\n    private _coommanService: CommanService,\n    private _voterService: VoterService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _swalService: SwalService) { }\n\n  ngOnInit(): void {\n    this.getParties();\n    this.getAssignee();\n    this.getVotingFor();\n    this.genders = this._coommanService.getGenders();\n    this.createAddVoterForm();\n    this.checkRouterValue();\n\n\n  }\n\n  checkRouterValue() {\n    let routeId;\n    this._route.params.subscribe(response => {\n      if (response.id) {\n        routeId = response.id;\n        this.getVotrDetailsById(Number(routeId));\n      }\n    });\n    if (this._router.url.includes('view-voter')) {\n      this.readonly = true;\n      this.voterForm.disable();\n    }\n  }\n\n  getParties() {\n    this._coommanService.getPartiesList().subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.parties = response.data;\n      }\n    }, (error) => { })\n  }\n\n  getAssignee() {\n    this._coommanService.getAssigneeList().subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.assignee = response.data;\n      }\n    }, (error) => { })\n  }\n\n  getVotingFor() {\n    this._coommanService.getVotingList().subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.votingFor = response.data;\n      }\n    }, (error) => { })\n  }\n\n\n  createAddVoterForm() {\n    // Create the form\n    this.voterForm = this._formBuilder.group({\n      id: [null],\n      firstName: ['', Validators.required],\n      middleName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      age: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\n      gender: ['', Validators.required],\n      ward: ['', Validators.required],\n      village: ['', Validators.required],\n      address: ['', Validators.required],\n      voterId: ['', Validators.pattern('^([a-zA-Z]){3}([0-9]){7}?$')],\n      adharId: [null, Validators.pattern('^([0-9]{4}[0-9]{4}[0-9]{4}$)|([0-9]{4}\\s[0-9]{4}\\s[0-9]{4}$)|([0-9]{4}-[0-9]{4}-[0-9]{4}$)')],\n      panId: ['', Validators.pattern('[A-Z]{5}[0-9]{4}[A-Z]{1}')],\n      votingForId: ['', Validators.required],\n      partiesId: ['', Validators.required],\n      assignedPersonId: ['', Validators.required],\n      comments: this._formBuilder.array([])\n    }, { validator: ageCheck('age') });\n  }\n\n  getVotrDetailsById(id: number) {\n    this._voterService.getVoterById(id).subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.patchValue(response.data);\n      }\n    }, error => { })\n  }\n\n  patchValue(data: { [key: string]: any }, { onlySelf, emitEvent }: { onlySelf?: boolean, emitEvent?: boolean } = {}): void {\n    Object.keys(data).forEach(name => {\n      if (this.voterForm.controls[name]) {\n        this.voterForm.controls[name].patchValue(data[name], { onlySelf: true, emitEvent });\n      }\n    });\n    this.voterForm.updateValueAndValidity({ onlySelf, emitEvent });\n    if (data.comments.length) {\n      this.voterForm.setControl('comments', this.setExistingCommetns(data.comments))\n    }\n\n  }\n\n  setExistingCommetns(commetns): FormArray {\n    const formArray = new FormArray([]);\n    commetns.forEach(element => {\n      formArray.push(this._formBuilder.group({\n        id: element.id,\n        description: element.description\n      }));\n    });\n    if (this.readonly) {\n      formArray.disable();\n    }\n    return formArray;\n  }\n\n  public getCommentsArray() {\n    return this.voterForm.get('comments') as FormArray;\n  }\n\n  private createComments(): FormGroup {\n    return new FormGroup({\n      id: new FormControl(0),\n      description: new FormControl('')\n    });\n  }\n\n  public addComment(): void {\n    const comments = this.voterForm.get('comments') as FormArray;\n    comments.push(this.createComments());\n  }\n\n  public deleteCommentItem(index) {\n    let invoiceItems = this.getCommentsArray();\n\n    invoiceItems.removeAt(index);\n\n  }\n\n  saveDetails() {\n    // Return if the form is invalid\n    if (this.voterForm.invalid) {\n      return;\n    }\n\n    this.voterForm.disable();\n\n    if (!this.voterForm.value.id) {\n      let param = this.voterForm.value;\n      this.postDetails(param);\n    } else {\n      this.putDetails();\n    }\n\n  }\n\n  postDetails(param) {\n    delete param.id;\n    this._voterService.postVoter(param).subscribe(response => {\n      if (response.statusCode == 201) {\n        this.voterForm.enable();\n        this._swalService.swalSUccess('अभिनंदन!', 'मतदार तपशील यशस्वीरित्या जोडले!');\n        this.navigateToList()\n      }\n    }, error => {\n      this.voterForm.enable();\n      this._swalService.swalError('क्षमस्व!', error.error.message);\n    });\n  }\n\n  putDetails() {\n    this._voterService.putVoter(this.voterForm.value).subscribe(response => {\n      if (response.statusCode == 200) {\n        this.voterForm.enable();\n        this._swalService.swalSUccess('अभिनंदन!', 'मतदार तपशील यशस्वीरित्या संपादित केले!');\n        this.navigateToList()\n      }\n    }, error => {\n      this.voterForm.enable();\n      this._swalService.swalError('क्षमस्व!', error.error.message);\n    });\n  }\n\n\n  navigateToList() {\n    // Navigate to the redirect url\n    this._router.navigateByUrl('/voters/list');\n  }\n\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n    <div class=\"flex-auto p-6 sm:p-10\">\n        <mat-card>\n            <mat-card-content>\n\n                <form class=\"mt-4\" [formGroup]=\"voterForm\" #voterNgForm=\"ngForm\" fxFlex=\"100\" fxLayout=\"column\">\n                    <div fxFlex=\"100\" fxLayout=\"column\">\n                        <div class=\"grid grid-cols-2 gap-2 place-content-start mb-3\">\n                            <mat-form-field>\n                                <mat-label>नाव</mat-label>\n                                <input id=\"firstName\" matInput [formControlName]=\"'firstName'\" required\n                                    appDeallowFirstSpace appRestrictSpecialCharacter>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('firstName').hasError('required')\">\n                                    प्रथम नाव आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>वडिलांचे नाव </mat-label>\n                                <input id=\"middleName\" matInput [formControlName]=\"'middleName'\" required\n                                    appDeallowFirstSpace appRestrictSpecialCharacter>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('middleName').hasError('required')\">\n                                    वडिलांचे नाव आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>आडनाव नाव </mat-label>\n                                <input id=\"lastName\" matInput [formControlName]=\"'lastName'\" required\n                                    appDeallowFirstSpace appRestrictSpecialCharacter>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('lastName').hasError('required')\">\n                                    आडनाव आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>वय</mat-label>\n                                <input type=\"number\" id=\"age\" matInput [formControlName]=\"'age'\" required maxlength=\"2\"\n                                    minlength=\"2\" onlyNumber appDeallowFirstSpace>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('age').hasError('required')\">\n                                    वय आवश्यक आहे\n                                </mat-error>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('age').hasError('ageMissmatch')\">\n                                    मतदार पात्र नाही\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>लिंग</mat-label>\n                                <mat-select id=\"gender\" class=\"bg-transparent\" [formControlName]=\"'gender'\" required>\n                                    <mat-option *ngFor=\"let gender of genders\" [value]=\"gender.id\">\n                                        {{gender.name}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('gender').hasError('required')\">\n                                    लिंग आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"grid grid-cols-2 gap-2 place-content-start mb-3\">\n                            <mat-form-field>\n                                <mat-label>प्रभाग क्रमांक</mat-label>\n                                <input type=\"number\" id=\"ward\" matInput [formControlName]=\"'ward'\" required\n                                    maxlength=\"1\" minlength=\"1\" onlyNumber appDeallowFirstSpace>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('ward').hasError('required')\">\n                                    प्रभाग क्रमांक आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>गाव</mat-label>\n                                <input id=\"village\" matInput [formControlName]=\"'village'\" required appDeallowFirstSpace\n                                    appRestrictSpecialCharacter>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('village').hasError('required')\">\n                                    गावाचे नाव आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>पत्ता</mat-label>\n                                <textarea id=\"address\" matInput [formControlName]=\"'address'\" required\n                                    appDeallowFirstSpace></textarea>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('address').hasError('required')\">\n                                    पूर्ण पत्ता आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"grid grid-cols-2 gap-2 place-content-start mb-3\">\n                            <mat-form-field>\n                                <mat-label>मोबाईल</mat-label>\n                                <input id=\"mobile\" matInput [formControlName]=\"'mobile'\" maxlength=\"10\" minlength=\"10\"\n                                    onlyNumber appDeallowFirstSpace>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('mobile').hasError('required')\">\n                                    मोबाईल नंबर आवश्यक आहे\n                                </mat-error>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('mobile').hasError('minlength')\">\n                                    कृपया वैध 10 अंकी मोबाइल नंबर प्रविष्ट करा\n                                </mat-error>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('mobile').hasError('maxlength')\">\n                                    कृपया वैध 10 अंकी मोबाइल नंबर प्रविष्ट करा\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>मतदार ओळखपत्र क्रमांक</mat-label>\n                                <input id=\"voterId\" matInput [formControlName]=\"'voterId'\" required\n                                    appDeallowFirstSpace>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('voterId').hasError('required')\">\n                                    मतदार ओळखपत्र क्रमांक आवश्यक आहे\n                                </mat-error>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('voterId').hasError('pattern')\">\n                                    कृपया वैध मतदार ओळखपत्र क्रमांक प्रविष्ट करा\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>आधार क्रमांक</mat-label>\n                                <input type=\"number\" id=\"adharId\" matInput [formControlName]=\"'adharId'\"\n                                    appDeallowFirstSpace onlyNumber>\n\n                                <!-- <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('adharId').hasError('required')\">\n                                    आधार क्रमांक आवश्यक आहे\n                                </mat-error> -->\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('adharId').hasError('pattern')\">\n                                    कृपया वैध आधार क्रमांक प्रविष्ट करा\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>पॅन ओळखपत्र क्रमांक</mat-label>\n                                <input id=\"panId\" matInput [formControlName]=\"'panId'\" appDeallowFirstSpace>\n                                <!-- <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('panId').hasError('required')\">\n                                    पॅन ओळखपत्र क्रमांक आवश्यक आहे\n                                </mat-error> -->\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('panId').hasError('pattern')\">\n                                    कृपया वैध पॅन ओळखपत्र क्रमांक प्रविष्ट करा\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"grid grid-cols-2 gap-2 place-content-start mb-3\">\n                            <mat-form-field>\n                                <mat-label>पक्ष</mat-label>\n                                <mat-select id=\"partiesId\" class=\"bg-transparent\" [formControlName]=\"'partiesId'\"\n                                    required>\n                                    <mat-option *ngFor=\"let party of parties\" [value]=\"party.id\">\n                                        {{party.name}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('partiesId').hasError('required')\">\n                                    पक्ष निवड आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <mat-label>निवडणुकीसाठी मतदान</mat-label>\n                                <mat-select id=\"votingForId\" class=\"bg-transparent\" [formControlName]=\"'votingForId'\"\n                                    required>\n                                    <mat-option *ngFor=\"let voteFor of votingFor\" [value]=\"voteFor.id\">\n                                        {{voteFor.name}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('votingForId').hasError('required')\">\n                                    निवडणुकीसाठी मतदान आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>व्यक्ती नियुक्त करा</mat-label>\n                                <mat-select id=\"assignedPersonId\" class=\"bg-transparent\"\n                                    [formControlName]=\"'assignedPersonId'\" required>\n                                    <mat-option *ngFor=\"let person of assignee\" [value]=\"person.id\">\n                                        {{person.name}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error class=\"mb-2\" *ngIf=\"voterForm.get('assignedPersonId').hasError('required')\">\n                                    व्यक्ती नियुक्त आवश्यक आहे\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"mb-3\" fxLayout=\"row wrap\">\n                            <div fxFlex=\"100\" fxLayout=\"row\" class=\"mb-2\" *ngIf=\"!readonly\">\n                                <button type=\"button\" mat-stroked-button (click)=\"addComment()\">\n                                    <mat-icon>add</mat-icon> नवीन टिप्पणी जोडा\n                                </button>\n                            </div>\n\n                            <div formArrayName=\"comments\" fxFlex=\"100\" fxLayout=\"column\">\n                                <div *ngFor=\"let comment of voterForm.get('comments')?.controls; let i = index\"\n                                    [formGroupName]=\"i\" fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"start start\">\n\n                                    <mat-form-field fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.gt-md=\"50\">\n                                        <input id=\"description\" matInput [formControlName]=\"'description'\"\n                                            appDeallowFirstSpace>\n                                    </mat-form-field>\n                                    <div *ngIf=\"!readonly && (comment.id==null)\" fxFlex=\"100\" fxFlex.gt-sm=\"25\"\n                                        fxFlex.gt-md=\"25\" fxLayoutAlign=\"start center\" class=\"ml-2 self-center mb-2\">\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteCommentItem(i)\">\n                                            <mat-icon>delete</mat-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <!-- Submit button -->\n                    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"!readonly\">\n                        <button class=\"fuse-mat-button-large mt-6\" mat-flat-button [color]=\"'primary'\"\n                            [disabled]=\"voterForm.disabled\" (click)=\"saveDetails()\">\n                            <span *ngIf=\"!voterForm.disabled\">\n                                तपशील जतन करा\n                            </span>\n                            <mat-progress-spinner *ngIf=\"voterForm.disabled\" [diameter]=\"24\" [mode]=\"'indeterminate'\">\n                            </mat-progress-spinner>\n                        </button>\n                    </div>\n\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import Swal from 'sweetalert2';\nimport { SwalService } from './../../../../shared/services/swal.service';\nimport { CommanService, party, voter, assignedPerson } from './../../../../shared/services/comman.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { VoterService } from '../service/voter.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'name', 'village', 'ward', 'actions'];\n  dataSource: MatTableDataSource<voter>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public voters: voter[] = [];\n  public parties: party[] = [];\n  public assignee: assignedPerson[] = [];\n  pageSize: number;\n  pageSizeOptions: number[];\n\n  public searchedName: string;\n  public searchedWard: number;\n  public searchedParty: number;\n  public searchedAssignedPersion: number;\n\n  constructor(private _votersService: VoterService,\n    private _coommanService: CommanService, private _router: Router, private _swalService: SwalService) { }\n\n  ngOnInit(): void {\n    this.getParties();\n    this.getAssignee();\n    this.getVoters();\n\n  }\n\n\n  getParties() {\n    this._coommanService.getPartiesList().subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.parties = response.data;\n      }\n    }, (error) => { })\n\n  }\n  getAssignee() {\n    this._coommanService.getAssigneeList().subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.assignee = response.data;\n      }\n    }, (error) => { })\n  }\n\n  private getVoters(param?: any) {\n    console.log('param', param);\n    this._votersService.getVotersList(param).subscribe((response) => {\n      if (response.statusCode == 200) {\n        this.voters = response.data;\n        this.setDataSource();\n      }\n    }, error => {\n      this._swalService.swalError(error.error.message);\n      this.voters = [];\n      this.setDataSource();\n    });\n  }\n\n\n  setDataSource() {\n    this.dataSource = new MatTableDataSource(this.voters);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.dataSource.filterPredicate = (data, filter: string) => {\n      const accumulator = (currentTerm, key) => {\n        return this.nestedFilterCheck(currentTerm, data, key);\n      };\n      const dataStr = Object.keys(data)\n        .reduce(accumulator, \"\")\n        .toLowerCase();\n      // Transform the filter by converting it to lowercase and removing whitespace.\n      const transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) !== -1;\n    };\n  }\n\n  public nestedFilterCheck(search, data, key) {\n    if (typeof data[key] === \"object\") {\n      for (const k in data[key]) {\n        if (data[key][k] !== null) {\n          search = this.nestedFilterCheck(search, data[key], k);\n        }\n      }\n    } else {\n      search += data[key];\n    }\n    return search;\n  }\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  openDetails(id: number, type: string) {\n    this._router.navigate(['/voters/' + type + '-voter', id]);\n  }\n\n  deleteRecord(id: number, index: number) {\n    Swal.fire({\n      title: 'तुम्हाला तपशील हटवायची खात्री आहे?',\n      showDenyButton: true,\n      confirmButtonText: 'होय हटवा',\n      denyButtonText: `नाही, ठीक आहे`,\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this.confirmDelete(id, index)\n      } else if (result.isDenied) {\n        this._swalService.swalSUccess('अभिनंदन!', 'मतदारांचा तपशील सुरक्षित आहे');\n      }\n\n    });\n\n  }\n\n  confirmDelete(id, index) {\n    this._votersService.deleteVoterById(id).subscribe(response => {\n      if (response.statusCode == 200) {\n        this._swalService.swalSUccess('', 'मतदारांचे तपशील यादीतून हटवले');\n        this.voters.splice(index, 1);\n        this.setDataSource();\n      }\n    }, error => { this._swalService.swalError('क्षमस्व!', 'कृपया पुन्हा प्रयत्न करा'); });\n  }\n\n\n  SelectionAssignedPersion(event) {\n    this.searchedAssignedPersion = event;\n    this.callFilterApi(this.searchedWard, this.searchedParty?.['id'], this.searchedAssignedPersion?.['id']);\n  }\n  SelectionParty(event) {\n    this.searchedParty = event;\n    this.callFilterApi(this.searchedWard, this.searchedParty?.['id'], this.searchedAssignedPersion?.['id']);\n  }\n  SelectionWard(event) {\n    this.searchedWard = event;\n    this.callFilterApi(this.searchedWard, this.searchedParty?.['id'], this.searchedAssignedPersion?.['id']);\n  }\n\n\n  callFilterApi(wardId?: number, party?: number, assignee?: number) {\n    let param = {\n      wardId: wardId,\n      party: party,\n      assignee: assignee\n    }\n    this.getVoters(param);\n  }\n\n  clearFilter() {\n\n    let param = {\n      wardId: this.searchedWard || null,\n      party: this.searchedParty?.['id'] || null,\n      assignee: this.searchedAssignedPersion?.['id'] || null\n    }\n    this.getVoters(param);\n\n  }\n\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n    <div class=\"flex-auto p-6 sm:p-10\">\n\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"30px\">\n            <div>\n                <input (keyup)=\"applyFilter($event.target.value)\" placeholder=\"नाव/ गाव शोधा\" class=\"mt-1 block w-full px-3 py-2  border border-slate-300 rounded-md shadow-sm placeholder-slate-400\n                    focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500 h-14\" autocomplete=\"off\"\n                    [(ngModel)]=\"searchedName\">\n            </div>\n\n            <div>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-label>प्रभाग</mat-label>\n                    <mat-select placeholder=\"प्रभाग शोधा\" class=\"bg-transparent\" [(ngModel)]=\"searchedWard\"\n                        (selectionChange)=\"SelectionWard($event.value)\">\n                        <mat-option selected>\n                            None\n                        </mat-option>\n                        <mat-option *ngFor=\"let item of [1,2,3,4,5]\" [value]=\"item\">\n                            {{item}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-label>पक्षांची नावे</mat-label>\n                    <mat-select placeholder=\"पक्षाच्या नावाने शोधा\" class=\"bg-transparent\" [(ngModel)]=\"searchedParty\"\n                        (selectionChange)=\"SelectionParty($event.value)\">\n                        <mat-option selected>\n                            None\n                        </mat-option>\n                        <mat-option *ngFor=\"let party of parties\" [value]=\"party\">\n                            {{party.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-label>नियुक्त केलेल्यांची नावे</mat-label>\n                    <mat-select placeholder=\"नियुक्त केलेल्या नावाने शोधा\" class=\"bg-transparent\"\n                        [(ngModel)]=\"searchedAssignedPersion\"\n                        (selectionChange)=\"SelectionAssignedPersion($event.value)\">\n                        <mat-option selected>\n                            None\n                        </mat-option>\n                        <mat-option *ngFor=\"let user of assignee\" [value]=\"user\">\n                            {{user.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"grid grid-cols-4 flex-wrap gap-4 content-between mb-3\">\n            <mat-chip-list aria-label=\"filter selection\">\n                <mat-chip *ngIf=\"searchedName\">{{searchedName}} <mat-icon aria-hidden=\"false\" aria-label=\"close icon\"\n                        fontIcon=\"close\" class=\"ml-2 text-sm cursor-pointer\" (click)=\"searchedName=null; clearFilter()\"></mat-icon>\n                </mat-chip>\n                <mat-chip *ngIf=\"searchedWard\">{{searchedWard}} <mat-icon aria-hidden=\"false\" aria-label=\"close icon\"\n                        fontIcon=\"close\" class=\"ml-2 text-sm cursor-pointer\" (click)=\"searchedWard=null; clearFilter()\"></mat-icon>\n                </mat-chip>\n                <mat-chip *ngIf=\"searchedParty\">{{searchedParty.name}} <mat-icon aria-hidden=\"false\"\n                        aria-label=\"close icon\" fontIcon=\"close\" class=\"ml-2 text-sm cursor-pointer\" (click)=\"searchedParty=null; clearFilter()\"></mat-icon>\n                </mat-chip>\n                <mat-chip *ngIf=\"searchedAssignedPersion\">{{searchedAssignedPersion.name}} <mat-icon aria-hidden=\"false\"\n                        aria-label=\"close icon\" fontIcon=\"close\" class=\"ml-2 text-sm cursor-pointer\" (click)=\"searchedAssignedPersion=null; clearFilter()\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n        </div>\n\n\n\n\n        <div class=\"card\">\n            <div class=\"table-wrapper w-full\">\n                <mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\">\n\n                    <!-- ID Column -->\n                    <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef> अ.क्र. </mat-header-cell>\n                        <mat-cell *matCellDef=\"let voter; let i=index\" class=\"text-ceter w-2/12\" data-label=\"ID\">\n                            {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i +\n                            this.paginator.pageIndex *\n                            this.paginator.pageSize}}</mat-cell>\n                    </ng-container>\n\n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"name\">\n                        <mat-header-cell *matHeaderCellDef> संपूर्ण नाव </mat-header-cell>\n                        <mat-cell *matCellDef=\"let voter\" class=\" fw-500\" data-label=\"Name\">\n                            {{voter.firstName}} {{voter.middleName}} {{voter.lastName}}\n                        </mat-cell>\n                    </ng-container>\n\n                    <!-- Village Column -->\n                    <ng-container matColumnDef=\"village\">\n                        <mat-header-cell *matHeaderCellDef> गाव </mat-header-cell>\n                        <mat-cell *matCellDef=\"let voter\" class=\" fw-500\" data-label=\"village\">\n                            {{voter.village}}\n                        </mat-cell>\n                    </ng-container>\n\n\n                    <!-- Village Column -->\n                    <ng-container matColumnDef=\"ward\">\n                        <mat-header-cell *matHeaderCellDef> प्रभाग </mat-header-cell>\n                        <mat-cell *matCellDef=\"let voter\" class=\" fw-500\" data-label=\"ward\">\n                            {{voter.ward}}\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell *matHeaderCellDef class=\"flex justify-center\" data-label='Actions'>क्रिया\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let voter; let i = index\" class=\"flex justify-center\"\n                            data-label='Actions'>\n                            <button mat-icon-button [matMenuTriggerFor]=\"menu\" matTooltip=\"अधिक पाहण्यासाठी क्लिक करा\"\n                                aria-label=\"अधिक पाहण्यासाठी क्लिक करा\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <button mat-menu-item (click)=\"openDetails(voter.id, 'view')\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>तपशील पहा</span>\n                                </button>\n                                <button mat-menu-item (click)=\"openDetails(voter.id, 'edit')\">\n                                    <mat-icon>autorenew</mat-icon>\n                                    <span>तपशील संपादित करा</span>\n                                </button>\n                                <button mat-menu-item (click)=\"deleteRecord(voter.id, i)\">\n                                    <mat-icon>delete</mat-icon>\n                                    <span>सूचीमधून काढा</span>\n                                </button>\n                            </mat-menu>\n                        </mat-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let voter; columns: displayedColumns;\">\n                    </mat-row>\n                </mat-table>\n                <p *ngIf=\"dataSource?.data.length === 0 \" class=\"py-5 mb-0 text-center\">माहिती उपलब्ध नाही</p>\n            </div>\n            <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n\n        </div>\n    </div>\n</div>","import { map } from 'rxjs/operators';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoterService {\n  private _apiUrl = environment.apiUrl + 'voter/';\n\n  constructor(private _httpClient: HttpClient) { }\n\n  getVotersList(param): Observable<any> {\n    let fullUrl: string = this._apiUrl + 'getVoterDetailsList';\n    if (param) {\n      Object.entries(param).forEach(([key, val]) =>\n        fullUrl = this.appendQueryParam(fullUrl, key, val)\n      );\n    }\n    return this._httpClient.get<any>(fullUrl).pipe(\n      map((response) => {\n        return response;\n      }));\n  }\n\n  postVoter(data): Observable<any> {\n    return this._httpClient.post<any>(this._apiUrl + 'addVoterDetails', data).pipe(map((response) => {\n      return response;\n    }));\n  }\n\n  putVoter(data): Observable<any> {\n    return this._httpClient.post<any>(this._apiUrl + 'updateVoterDetails/' + data.id, data).pipe(map((response) => {\n      return response;\n    }));\n  }\n\n  getVoterById(id) {\n    return this._httpClient.get<any>(this._apiUrl + 'getVoterDetailsById/' + id).pipe(\n      map((response) => {\n        return response;\n      }));\n  }\n\n  deleteVoterById(id) {\n    return this._httpClient.delete<any>(this._apiUrl + 'deleteVoterDetails/' + id).pipe(\n      map((response) => {\n        return response;\n      }));\n  }\n\n\n  appendQueryParam(url: string, paramName?: any, value?: any): string {\n    if (value !== null && value !== undefined && value) {\n      if (url.includes('?')) {\n        return url + '&' + paramName + '=' + value;\n      } else {\n        return url + '?' + paramName + '=' + value;\n      }\n    } else {\n      return url;\n    }\n  }\n  // appendQueryParam(url: string, param: any): string {\n  //   // let returnUrl: string;\n  //   Object.entries(param).forEach(([key, value]) => {\n  //     console.log(key, value);\n  //     if (value !== null && value !== undefined && value) {\n  //       if (url.includes('?')) {\n  //         console.log('url', url + '&' + key + '=' + value);\n  //         return url + '&' + key + '=' + value;\n  //       } else {\n  //         console.log('url', url + '?' + key + '=' + value);\n  //         return url + '?' + key + '=' + value;\n  //       }\n  //     } else {\n  //       return url;\n  //     }\n  //   });\n  //   return url\n  // }\n\n}\n","import { SharedModule } from 'app/shared/shared.module';\nimport { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\n\n\nconst votersRoutes: Route[] = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'list',\n        pathMatch: 'full',\n        component: ListComponent\n      },\n      {\n        path: 'add-voter',\n        component: AddComponent\n      },\n      {\n        path: 'edit-voter/:id',\n        component: AddComponent\n      },\n      {\n        path: 'view-voter/:id',\n        component: AddComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    AddComponent\n  ],\n  imports: [\n    RouterModule.forChild(votersRoutes),\n    SharedModule\n\n  ]\n})\nexport class VotersModule { }\n"],"names":[],"sourceRoot":"webpack:///"}